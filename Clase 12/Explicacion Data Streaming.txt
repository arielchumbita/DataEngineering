######## BATCH
Pensemos Car retal

Sales
Car interventory
Customer expectations
Todo esto fluye por Data pipelines

Podemos tener muchas fuentes de datos
Punto de venta
CRM
Website
Cada uno con DB

Cada cierto tiempo aplicamos Batch processing
Data warehouse >> BI tools

En Batch lo importante son los mensajes (JSON eg)
########### STREAMING
ahora piensa en el siguiente problema
Monitorear posicion de un vehiculo (Uber etc)
Trackear que hace un usuario en spotify

No podemos usar Batch processing
Eventos son lo importante aqui
Def Algo que pasa con cierta importancia

Ej:
user_id: 1
timestamp: "2:21:20"
"type": LEAVE

user_id: 1
timestamp: "2:21:17"
"type": SCROLL

user_id: 1
timestamp: "2:21:15"
"type": LANDING

EVENT-DRIVEN Arquitectures

Stream processor es importante (Apache Kafka)
Amazon Kinesis
Google Cloud Puub Sub

Podemos separar los topicos en queues por medio de Pub/Sub

Otra cosa importante es la escalabilidad
Podemos partir los topicos en Particiones
(e.g Coordenadas, velocidad, engine)

Necesitas Microservicios tambien

####################################
El procesamiento de flujo fácil se refiere al procesamiento eficiente y simplificado de flujos de datos continuos en tiempo real o casi en tiempo real. El procesamiento de flujo permite el análisis, la transformación y el cálculo de los datos a medida que fluyen, lo que proporciona información inmediata y permite la toma de decisiones en tiempo real.

Varias herramientas se utilizan comúnmente para facilitar el procesamiento de secuencias. Aquí hay algunos populares:

Apache Kafka: Apache Kafka es una plataforma de transmisión distribuida que se usa ampliamente para crear canalizaciones de datos en tiempo real y aplicaciones de transmisión. Proporciona capacidades de mensajería escalables, tolerantes a fallas y de alto rendimiento, lo que lo convierte en una excelente opción para el procesamiento de transmisiones.

Apache Flink: Apache Flink es un marco de procesamiento de transmisión de código abierto que proporciona potentes capacidades de procesamiento de transmisión, incluido el procesamiento de tiempo de eventos, ventanas y tolerancia a fallas. Admite el procesamiento por lotes y flujo y ofrece un alto rendimiento y baja latencia.

Apache Spark Streaming: Apache Spark Streaming es una extensión del popular marco Apache Spark que permite un procesamiento de flujo escalable y tolerante a fallas. Proporciona un modelo de programación simple y expresivo y se integra a la perfección con otros componentes de Spark para el procesamiento por lotes y el aprendizaje automático.

Amazon Kinesis: Amazon Kinesis es un servicio de transmisión totalmente administrado proporcionado por Amazon Web Services (AWS). Simplifica el proceso de creación de aplicaciones de transmisión en tiempo real al manejar las complejidades de escalado, procesamiento y almacenamiento de flujos de datos. Ofrece varias capacidades de transmisión, como Kinesis Data Streams, Kinesis Data Firehose y Kinesis Data Analytics.

Apache Samza: Apache Samza es un marco de procesamiento de flujo de código abierto que se centra en la simplicidad y la tolerancia a fallas. Se integra con Apache Kafka y ofrece una API de alto nivel para crear aplicaciones de procesamiento de flujo en Java o Scala.

Microsoft Azure Stream Analytics: Azure Stream Analytics es un servicio de análisis en tiempo real totalmente administrado que ofrece Microsoft Azure. Permite a los usuarios procesar y analizar datos de transmisión de varias fuentes, como dispositivos IoT, redes sociales y registros, utilizando un lenguaje similar a SQL simple.

Estos son solo algunos ejemplos, y también hay otras herramientas de procesamiento de flujo disponibles. La elección de la herramienta depende de factores como los requisitos específicos, las necesidades de escalabilidad, las capacidades de integración y los lenguajes o marcos de programación preferidos por el equipo de desarrollo.


Caso de uso netflix:


1. Recopilación de datos: Netflix recopila datos de transmisión de millones de usuarios, incluido su historial de visualización, consultas de búsqueda, calificaciones e interacciones, como pausar, rebobinar u omitir contenido. Estos datos se transmiten continuamente a un sistema central de procesamiento de datos.

2. Procesamiento de datos en tiempo real: el sistema de procesamiento de flujo, como Apache Kafka o Amazon Kinesis, ingiere y procesa el flujo de datos entrante en tiempo real. Realiza varias operaciones, como filtrar, agregar y enriquecer los datos.

3. Análisis en tiempo real: Netflix aplica análisis en tiempo real en los datos de transmisión para obtener información inmediata. Por ejemplo, pueden rastrear la popularidad de diferentes programas o películas, monitorear las métricas de participación del usuario o identificar contenido de tendencias.

4. Personalización y recomendaciones: el procesamiento de transmisión ayuda a Netflix a personalizar la experiencia del usuario al analizar el comportamiento de transmisión de cada usuario en tiempo real. Los algoritmos procesan los datos de transmisión para comprender las preferencias del usuario, identificar espectadores similares y recomendar contenido relevante en función de sus intereses.

5. Actualizaciones dinámicas de contenido: con el procesamiento de transmisión, Netflix puede actualizar dinámicamente las recomendaciones y el catálogo de contenido a medida que llegan nuevos datos. Si un usuario mira un nuevo episodio de una serie, el sistema puede actualizar instantáneamente el motor de recomendaciones y sugerir el próximo episodio o programas relacionados.

6. Perspectivas operativas: el procesamiento de transmisiones también permite que Netflix obtenga percepciones operativas en tiempo real. Pueden monitorear el estado de su infraestructura de transmisión, detectar anomalías o problemas de rendimiento y tomar medidas inmediatas para garantizar una experiencia de transmisión fluida para sus usuarios.